@model PagedList.IPagedList<Planes.Models.Plane>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Tytul = "Lista samolotów";
}

<h2>Lista samolotów</h2>

@if (User.Identity.IsAuthenticated)
{
    <p>
        <a class="btn btn-primary" href="/Planes/Create">Dodaj nowy przelot</a>
      
    </p>
}

@using (Html.BeginForm("Index", "Planes", FormMethod.Get))
{
<p>
    Nazwa/Typ: @Html.TextBox("searchName", ViewBag.CurrentFilter as string) <br/>
    <input type="submit" value="Szukaj" />
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Nazwa", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>

        <th>
            @Html.ActionLink("Typ", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.ActionLink("Szczegóły", "Details", new { id = item.ID }, new { @class = "btn btn-warning" })

                @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Pracownik")))
                {
                    <br />
                    @Html.ActionLink("Edytuj", "Edit", new { id = item.ID }, new { @class = "btn btn-primary" })
                }
                @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin")))
                {
                    <br />
                    @Html.ActionLink("Usuń", "Delete", new { id = item.ID }, new { @class = "btn btn-danger" })
                }
            </td>
        </tr>
    }

</table>
}

    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
 
   